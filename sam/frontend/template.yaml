AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  collage-fe-stack

  SAM template for hosting a static website in S3 with cloudfront.
  Assumes you have already created the bucket and made it publicly visible for site browsing.
  TODO(auberon): Make it so that the template handles this as well.

  Also assumes you have a domain in Route 53 you wish to use.

Parameters:
  RootDomainName:
    Type: String
    Description: The DNS name of the website WITHOUT the www (e.g. 'complexnmr.com'). This must also be the name of your bucket.
  HostedZoneId:
    Type: String
    Description: The ID of the Hosted Zone for the website in Route 53. Can be found in the AWS console.

Resources:
  SiteCertificate:
      Type: AWS::CertificateManager::Certificate
      Properties:
        DomainName: !Ref RootDomainName
        ValidationMethod: DNS
        DomainValidationOptions: 
          - DomainName: !Ref RootDomainName
            ValidationDomain: !Ref RootDomainName
        SubjectAlternativeNames:
          - !Sub 'www.${RootDomainName}'

  SiteCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: 'index.html'
        Aliases:
          - !Ref RootDomainName
          - !Sub 'www.${RootDomainName}'
        Origins:
          - Id: S3Origin
            DomainName: !Sub '${RootDomainName}.s3.amazonaws.com'
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt DistributionFunction.FunctionMetadata.FunctionARN
        ViewerCertificate:
          AcmCertificateArn: !Ref SiteCertificate
          SslSupportMethod: sni-only

  # Taken from https://stackoverflow.com/questions/59634922/how-do-i-serve-index-html-in-subfolders-with-s3-cloudfront
  # Used to automatically append index.html where needed.
  DistributionFunction:
    Type: AWS::CloudFront::Function
    Properties:
      AutoPublish: true
      # TODO(auberon): Investigate moving this function to a separate file
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          
          // Check whether the URI is missing a file name.
          if (uri.endsWith('/')) {
              request.uri += 'index.html';
          } 
          // Check whether the URI is missing a file extension.
          else if (!uri.includes('.')) {
              request.uri += '/index.html';
          }

          return request;
        }
      FunctionConfig:
        Comment: Redirect-Default-Index-Request
        Runtime: cloudfront-js-1.0
      Name: test-site-site-redirect-index-request
  
  SiteRecordSet:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref RootDomainName
          Type: A
          AliasTarget:
            DNSName: !GetAtt SiteCloudFront.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # Global CloudFront Hosted Zone ID
        - Name: !Sub 'www.${RootDomainName}'
          Type: A
          AliasTarget:
            DNSName: !GetAtt SiteCloudFront.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # Global CloudFront Hosted Zone ID

Outputs:
  SiteCertificateARN:
    Description: "The ARN of the SSL certificate for the frontend"
    Value: !Ref SiteCertificate
  CloudFrontDomainName:
    Description: "The domain name of the CloudFront distribution for the frontend"
    Value: !GetAtt SiteCloudFront.DomainName

  

